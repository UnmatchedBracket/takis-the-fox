/*
	--CODE TODO
	-[done]afterimages. not pt, antone blast :)
	-[done]wavedashing lol (nick wants this)
	-[done]fix up hammer blast hitbox (uughghhh)
	-[done]combo stuff (ghiugdjk)
	-[done]erm, death messages
	-[done]make sure stuff slike clutch works in nonfriendly w/o ff
	-[done]hide hud in specialstages
	-[done]alt yellow for combo meter
	-do hud styles like modernsonic and toggling like mrce
	-[done]add sunstroke. already got the texasarea net
	-[done]port hud stuff to customhud
	-[done]give spikeballs a deathstate
	-make freezing actually kill you
	-[done]freeze combo while finished in pizza time
	-[done]movecollide for springs to keep momentum (booster boost)
	-[done]stupid thinkframe for detecting PF_SLIDING
	-[done]also make speedpad sectors keep momentum
	-[done]reuse soap code for ptje ranks
	-death anims
	-wall bonk lol
	-add bot stuff
	-[done]happy hour for other skins?
	-fc stuff?
	-[done]custom arma to bbreak more stuff (like spikes)
	-[done]PASSWORD!!!
	-[done]make recov jump not rely on flashing
	-[done]dont kill team boxes on other teams
	-conga?
	-string the combo bar into 1, long graphic, use cropped to crop?
	-[done]tf2 taunt menu
	-countdown nums for drawtimer
	-instant finishes in multiplayer, prob after a special stage, most
	 noticable in stages with capsules
	-[done]make heartcards give score at the end
	-[done]maybe increase the homerun bat hitbox? because, yknow, the hammer
	 is big
	-[done]cursor style for the taunt menu, nums <-> cursor
	-crit sfx
	-war timer and war timer custom gfx
	-[done]RETRO STATUSFACE FOR MARIO TOLS
	-[done]save after loading to remove invalid saves
	-[done]save during exiting
	-finish death anims
	-[done]cosmenu like soap's
	-homework varient of happy hour
	-[done]toggle for loud and dangerous taunts
	-taunt_t info?
	-rs neo stuff for taunt functions
	-[done]fix io quicktaunts being broken
	-dont let quick taunts spam "you cant do this"
	-[done]MORE WIND LINES
	-[done]little icon above people with cosmenus open'
	-[done]cosmenu "dear pesky plumbers..." letter
	-update customhud init funcs
	-find out whats making the erz1 fof conveyors hyperspeed
	-[done]only sweat if we're running
	-make a function to add takis_menu pages
	-move all hud related code in shorts to their respective hud
	 drawing function
	 actually,, maybe dont, thatll make it fps dependant
	-spingebobb #1 hat option
	-[done]add cosmenu scolling
	-[done]when counting num destroyables, add a var to the mobj to mark it
	 as yet-to-be-destroyed. only increase thingsdestroyed if that
	 var is true
	-[done]make sure shields function properly
	-[scrapped]optional paperdoll over statusface
	-[done]pw_strong?
	-[done]still break other types of "spikes" alongside STR_SPIKE
	-milne kick
	-taunt icons
	-ach icons
	-move all takis.HUD editting code from LUA_hud to TakisHUDStuff
	-set takis.issuperman to random when nightserized, if true,
	 spawn a superman cape
	-if the Verys draw past the bottom of the screen, only draw 1 and
	 put a x3240 for the # of Verys
	-maybe give all hud elements V_PERPLAYER??
	-[done]fix the clutch being slow with smaller scales
	-MORE EFFECTS!!
	
	Dear Pesky Plumbers,

	The Koopalings and I have taken over the Mushroom Kingdom. 
	The Princess is now a permanent guest at one of my seven Koopa Hotels. 
	I dare you to find her, if you can! 
	If you need instructions on how to get through the hotels, check out the enclosed instruction book.
	And you gotta help us!
	
	--ANIM TODO
	-redo smug sprites
	-reuse spng for jump
	-the tail on roll frames doesnt point the right way
	
*/

//thanks katsy for this function
local function stupidbouncesectors(mobj, sector)
    for fof in sector.ffloors()
        if not (fof.fofflags & FOF_BOUNCY) and (GetSecSpecial(fof.master.frontsector.special, 1) != 15)
            continue
        end
        if not (fof.fofflags & FOF_EXISTS)
            continue
        end
        if (mobj.z+mobj.height+mobj.momz < fof.bottomheight) or (mobj.z-mobj.momz > fof.topheight)
            continue
        end
        return true
    end
end

//from clairebun
local function L_ZCollide(mo1,mo2)
	if mo1.z > mo2.height+mo2.z then return false end
	if mo2.z > mo1.height+mo1.z then return false end
	return true
end
local function collide2(me,mob)
	if me.z > (mob.height*2)+mob.z then return false end
	if mob.z > me.height+me.z then return false end
	return true
end
//lazy
local function spawnragthing(tm,t)
	SpawnRagThing(tm,t)
end
local function LaunchTargetFromInflictor(type,target,inflictor,basespeed,speedadd)
	if (string.lower(type) == "instathrust") or type == 1
		P_InstaThrust(target, R_PointToAngle2(inflictor.x, inflictor.y, target.x, target.y), basespeed+(speedadd))
	else
		P_Thrust(target, R_PointToAngle2(inflictor.x, inflictor.y, target.x, target.y), basespeed+(speedadd))
	end
end
//also lazy
local function MeSoundHalfVolume(sfx,p)
	S_StartSoundAtVolume(nil,sfx,4*255/5,p)
end

local ranktonum = {
	["P"] = 6,
	["S"] = 5,
	["A"] = 4,
	["B"] = 3,
	["C"] = 2,
	["D"] = 1,
}

addHook("PlayerThink", function(p)
	if not p
	or not p.valid
		return
	end
	
	if not p.takistable
		TakisInitTable(p)
		return
	end
	
	if not p.takistable.io.loaded
		if p.takistable.io.loadwait
			p.takistable.io.loadwait = $-1
		else
			TakisLoadStuff(p)
		end
	end
	
	if ((p.mo) and (p.mo.valid))
		local me = p.mo
		local takis = p.takistable
		
		if (not p.exiting)
		and takis.camerascale
			p.camerascale = takis.camerascale
			takis.camerascale = nil
		end
		
		if p.takis
			if p.takis.shotgunnotif == 0
				p.takis = nil
			end
		end
		
		TakisButtonStuff(p,takis)
		TakisBooleans(p,me,takis,TAKIS_SKIN)
		//more accurate speed thing
		takis.accspeed = FixedDiv(abs(FixedHypot(p.rmomx,p.rmomy)), me.scale)
		takis.gravflip = P_MobjFlip(me)
		
		if me.skin == TAKIS_SKIN
			
			/*
			takis.HUD.happyhour.its.patch = "TAHY_ITS"
			takis.HUD.happyhour.happy.patch = "TAHY_HAPY"
			takis.HUD.happyhour.hour.patch = "TAHY_HOUR"
			*/
			
			//if something youre looking for isnt here, theres a good
			//chance that its in shorts!
			TakisDoShorts(p,me,takis)
			
			//skin name then sfx
			p.happyhourscream = {skin = TAKIS_SKIN,sfx = sfx_hapyhr}
			
			if (takis.otherskin)
				takis.otherskin = false
				takis.otherskintime = 0
			end
			
			//forced strafe
			if takis.io.nostrafe == 0
			and (takis.notCarried)
			and not ((p.pflags & (PF_SPINNING|PF_STASIS))
			or (p.powers[pw_nocontrol]))
			and not (p.powers[pw_carry] == CR_NIGHTSMODE)
				p.drawangle = me.angle
			end
			
			takis.afterimaging = 0
			takis.applyfriction = true
			
			//add ffoxD's FFDMomentum here because its awesome
			if (p.cmd.forwardmove or p.cmd.sidemove)
			and p.normalspeed <= takis.accspeed
			and me.friction < FU
				me.friction = FU
			end
			
			if me.friction > 29*FU/32
				if not (leveltime % 4)
				and takis.onGround
				and not p.powers[pw_sneakers]
					me.friction = $-(FU/50)
				end
			end
			
			//spin specials
			if takis.use > 0
			and not TAKIS_NET.inspecialstage
			
				if (not takis.shotgunned)
					//clutch
					if takis.use == 1
					and takis.onGround
					and not takis.taunttime
					and me.health
					and (me.state ~= S_PLAY_GASP)
					and (takis.notCarried)
					and (me.sprite2 ~= SPR2_PAIN)
					and not PSO
					and not (takis.yeahed)
					and (p.realtime > 0)
					and not (takis.c2 and me.state == S_PLAY_TAKIS_SLIDE)
						
						if takis.io.nostrafe == 1
							local ang = (p.cmd.angleturn << 16) + R_PointToAngle2(0, 0, p.cmd.forwardmove << 16, -p.cmd.sidemove << 16)
							p.drawangle = ang
						end
						
						S_StartSoundAtVolume(me,sfx_clutch,255/2)
						if not takis.clutchingtime
							S_StartSoundAtVolume(me,sfx_cltch2,255/2)
						end
						
						p.pflags = $ &~PF_SPINNING
						takis.clutchingtime = 1
						//print(takis.clutchtime)
						
						local thrust = FixedMul( (4*FU), (takis.clutchcombo*FU)/2 )
						
						//not too fast, now
						/*
						if thrust >= 13*me.scale
							thrust = 13*me.scale
						end
						*/
						
						//clutch boost
						if (takis.clutchtime > 0)
							if (takis.clutchtime <= 11)
								//if takis.clutchcombo > 1
								
									takis.clutchcombo = $+1
									takis.clutchcombotime = 2*TR
									
									S_StartSoundAtVolume(me,sfx_kc5b,255/3)
									
									//effect
									local ghost = P_SpawnGhostMobj(me)
									ghost.scale = 3*me.scale/2
									ghost.destscale = FixedMul(me.scale,2)
									ghost.colorized = true
									ghost.frame = $|TR_TRANS10
									ghost.blendmode = AST_ADD
									for i = 0, 4 do
										P_SpawnSkidDust(p,25*me.scale)
									end
									
									P_Thrust(me,p.drawangle,3*me.scale/2)
									thrust = $+(3*FU/2)+FU
								//end
							//dont thrust too early, now!
							elseif takis.clutchtime > 16
								
								takis.clutchspamcount = $+1
								takis.clutchcombo = 0
								takis.clutchcombotime = 0
								thrust = FU/5
								
							end
						end
						
						/*
						for i = 0, 10 do
							P_SpawnSkidDust(p,15*me.scale)
						end
						*/
						
						if p.powers[pw_sneakers]
							thrust = $*9/5
						end
						
						if p.gotflag
							thrust = $/4
						end
						
						local  ang = (p.cmd.angleturn << 16) + R_PointToAngle2(0, 0, p.cmd.forwardmove << 16, -p.cmd.sidemove << 16)
						
						thrust = FixedMul(thrust,me.scale)
						
						P_Thrust(me,/*p.drawangle*/ang,thrust)
						
						/*
						local x,y = ReturnTrigAngles(p.drawangle-ANGLE_90)
						local d1 = P_SpawnMobjFromMobj(me,16*x,16*y,0,MT_TAKIS_CLUTCHDUST)
						x,y = ReturnTrigAngles(p.drawangle)
						P_SetOrigin(d1,d1.x-16*x,d1.y-16*y,d1.z)
 						d1.angle = R_PointToAngle2(me.x+me.momx,me.y+me.momy,d1.x,d1.y)
						P_SetOrigin(d1,d1.x,d1.y,d1.z)
						*/
						
						//xmom code
						local d1 = P_SpawnMobjFromMobj(me, -20*cos(p.drawangle + ANGLE_45), -20*sin(p.drawangle + ANGLE_45), 0, MT_TAKIS_CLUTCHDUST)
						local d2 = P_SpawnMobjFromMobj(me, -20*cos(p.drawangle - ANGLE_45), -20*sin(p.drawangle - ANGLE_45), 0, MT_TAKIS_CLUTCHDUST)
						d1.scale = $*2
						d1.angle = R_PointToAngle2(me.x+me.momx, me.y+me.momy, d1.x, d1.y) --- ANG5
						d2.scale = $*2
						d2.angle = R_PointToAngle2(me.x+me.momx, me.y+me.momy, d2.x, d2.y) --+ ANG5
						
						if takis.accspeed < skins[TAKIS_SKIN].runspeed
							P_Thrust(me,p.drawangle,FixedMul(skins[TAKIS_SKIN].runspeed-takis.accspeed,me.scale))
						end
						
						//TODO replace with clutchstart
						me.state = S_PLAY_RUN
						P_MovePlayer(p)
						takis.clutchtime = 23
						takis.clutchspamtime = 23
						
						if takis.clutchspamcount == 10
							TakisAwardAchievement(p,ACHIEVEMENT_CLUTCHSPAM)
						end
						
						p.jp = 2
						p.jt = -5
						
					end
					
					//hammer blast
					if takis.use == (TR/4)
					and not takis.onGround
					and not takis.hammerblastdown
					and me.state ~= S_PLAY_PAIN
					and me.health
					and (takis.notCarried)
					and not takis.wavedashcapable
					and not (p.gotflag)
						S_StartSoundAtVolume(me,sfx_airham,3*255/5)
						takis.hammerblastdown = 1
						p.pflags = $|PF_THOKKED
						takis.thokked = true
						P_DoJump(p,false)
						me.state = S_PLAY_MELEE
						me.tics = -1
						//P_SetObjectMomZ(me,-9*FU)
					end
					
					//wavedash
					if takis.c3 == 1
					and takis.use < 13
					and takis.wavedashcapable
						p.pflags = $ &~(PF_JUMPED)
						P_SetObjectMomZ(me,-8*FRACUNIT)
						local ang = (p.cmd.angleturn << 16) + R_PointToAngle2(0, 0, p.cmd.forwardmove << 16, -p.cmd.sidemove << 16)
						S_StartSoundAtVolume(me,sfx_takdiv,255/4)
						P_Thrust(me,ang,14*me.scale)
					end
				else
					
					//shotgun shot
					if (takis.use == 1)
					and not (takis.shotguncooldown)
					and not (takis.inPain or takis.inFakePain)
						P_Thrust(me,p.drawangle,-10*me.scale)
						P_MovePlayer(p)
						
						takis.shotguncooldown = 18
						
						local x,y = ReturnTrigAngles(p.drawangle)
						
						/*
						local sht = P_SpawnMobjFromMobj(me,85*x+me.momx,85*y+me.momy,0,MT_TAKIS_SHOTGUN_HITBOX)
						sht.tracer = me
						sht.tics = 5
						sht.angle = p.drawangle
						*/
						
						if (takis.critcharged)
							S_StartSound(me,sfx_tacrts)
						end
						
						S_StartSound(me,sfx_shgns)
						
						TakisDoShotgunShot(p)
					end
					
				end	
				
			end
			
			//c1 specials
			if takis.c1 > 0
			and not TAKIS_NET.inspecialstage
			
				if not takis.shotgunned
					//dive
					//not to be confused with soap's dive!
					//mario dive
					if takis.c1 == 1
					and not takis.onGround
					and not (takis.dived)
					and (takis.notCarried)
					and me.state ~= S_PLAY_PAIN
					and me.health
					and not takis.hammerblastdown
					and not PSO
					
						takis.hammerblastjumped = 0
					
						local ang = (p.cmd.angleturn << 16) + R_PointToAngle2(0, 0, p.cmd.forwardmove << 16, -p.cmd.sidemove << 16)
						S_StartSound(me,sfx_takdiv)
						
						//im not sure if this actually does anything
						//but it seems to work so im leaving it
						if ((me.flags2 & MF2_TWOD)
						or (twodlevel))
							if (p.cmd.sidemove > 0)
								ang = p.drawangle
							elseif (p.cmd.sidemove < 0)
								ang = InvAngle(p.drawangle)
							end
						end
						
						P_InstaThrust(me,ang,FixedMul(20*FU+(3*takis.accspeed/5),me.scale))
						
						p.drawangle = ang
						CreateWindRing(p,me)

						p.pflags = $|PF_THOKKED &~(PF_JUMPED)
						takis.dived = true
						takis.thokked = true
						
						me.state = S_PLAY_FLOAT_RUN
						P_SetObjectMomZ(me,7*FU)
					end
				else
				
					//dash thing
					if takis.c1
					and	takis.onGround 
					
					end
				end
				
			end
			
			//quick taunts
			if ((takis.tossflag > 0) and ((takis.c2 > 0) or (takis.c3 > 0)))
			and takis.onGround
			and p.panim == PA_IDLE
			and takis.taunttime == 0
			and not takis.yeahed
			and not (takis.tauntmenu.open)	
				if ((takis.c2) and (not takis.c3))
					if takis.tauntquick1
						if ((TAKIS_TAUNT_INIT[takis.tauntquick1] ~= nil)
						and (TAKIS_TAUNT_THINK[takis.tauntquick1] ~= nil))
							takis.tauntid = takis.tauntquick1
						
							//init func
							local func = TAKIS_TAUNT_INIT[takis.tauntquick1]
							func(p)
							
						else
							if (takis.c2 == 1)
								S_StartSound(nil,sfx_notadd,p)
							end
						end
					else
						if (takis.c2 == 1)
							S_StartSound(nil,sfx_notadd,p)
						end
					end
				elseif ((takis.c3) and (not takis.c2))
					if takis.tauntquick2
						
						if ((TAKIS_TAUNT_INIT[takis.tauntquick2] ~= nil)
						and (TAKIS_TAUNT_THINK[takis.tauntquick2] ~= nil))
							takis.tauntid = takis.tauntquick2
						
							//init func
							local func = TAKIS_TAUNT_INIT[takis.tauntquick2]
							func(p)
							
						else
							if (takis.c3 == 1)
								S_StartSound(nil,sfx_notadd,p)
							end
						end
					else
						if (takis.c3 == 1)
							S_StartSound(nil,sfx_notadd,p)
						end
					end
				end
			end
			
			//tf2-styled taunt menu!
			if not (takis.tauntmenu.open)
				local menu = takis.tauntmenu
				menu.tictime = 0
				
				if ((takis.tossflag) and (takis.c1))
				and not ((takis.yeahed) or (takis.taunttime))
					menu.yadd = 500*FU
					menu.open = true
				end
				
				menu.cursor = 1
				
			else
				local menu = takis.tauntmenu
				menu.tictime = $+1
				
				if not menu.closingtime
					//close
					if takis.c1 == 1
						menu.closingtime = TR/2
					end
					
					if (takis.io.tmcursorstyle == 2)
						if (takis.weaponnext == 1)
							if (menu.cursor < 7)
								menu.cursor = $+1
							end
						end
						if (takis.weaponprev == 1)
							if (menu.cursor > 1)
								menu.cursor = $-1
							end
						end
					end
					
					local num = takis.weaponmask
					if (takis.io. tmcursorstyle == 2)
						num = menu.cursor
					end
					local id = menu.list[takis.weaponmask or menu.cursor]
					
					//set quick taunts
					if takis.tossflag
						
						//slot one
						if (takis.c2 == 1)
							//remove
							if takis.fire
								takis.tauntquick1 = 0
								S_StartSound(nil,sfx_adderr,p)
								TakisSaveStuff(p)
							else
								local selectable = true
								if ((id == "") or (id == nil))
								or ((TAKIS_TAUNT_INIT[takis.weaponmask] == nil) or (TAKIS_TAUNT_THINK[takis.weaponmask] == nil))
									selectable = false
								end
								
								if selectable
								and takis.weaponmasktime
								and (takis.tauntquick1 ~= takis.weaponmask)
								and (takis.weaponmask ~= takis.tauntquick2)
									S_StartSound(nil,sfx_addfil,p)
									takis.tauntquick1 = takis.weaponmask
									TakisSaveStuff(p)
								end
							end
						//slot two
						elseif (takis.c3 == 1)
							//remove
							if takis.fire
								takis.tauntquick2 = 0
								S_StartSound(nil,sfx_adderr,p)
								TakisSaveStuff(p)
							else
								local selectable = true
								if ((id == "") or (id == nil))
								or ((TAKIS_TAUNT_INIT[takis.weaponmask] == nil) or (TAKIS_TAUNT_THINK[takis.weaponmask] == nil))
									selectable = false
								end
								
								if selectable
								and takis.weaponmasktime
								and (takis.tauntquick2 ~= takis.weaponmask)
								and (takis.weaponmask ~= takis.tauntquick1)
									S_StartSound(nil,sfx_addfil,p)
									takis.tauntquick2 = takis.weaponmask
									TakisSaveStuff(p)
								end
							end
						
						end 
					else
						//choose the taunt!
						if not (takis.c3)
							num = takis.weaponmask
							if (takis.io. tmcursorstyle == 2)
								num = menu.cursor
							end
							
							local selectable = true
							if ((id == "") or (id == nil))
							or ((TAKIS_TAUNT_INIT[num] == nil) or (TAKIS_TAUNT_THINK[num] == nil))
								selectable = false
							end
							
							if ( ((takis.weaponmasktime == 1) and (takis.io.tmcursorstyle == 1))
							or ((takis.firenormal == 1) and (takis.io.tmcursorstyle == 2)) )
							and selectable
							and takis.onGround
								
								takis.tauntid = num
								
								//init func
								local func = TAKIS_TAUNT_INIT[num]
								func(p)
								
								//close
								menu.open = false
							end
						//we're joining a partner taunt!
						elseif ((takis.c3 == 1) and not takis.tossflag)
							
							for p2 in players.iterate
								if p2 == p
									continue
								end
								
								local m2 = p2.realmo
								
								local dx = me.x-m2.x
								local dy = me.y-m2.y
								
								//in range!
								if FixedHypot(dx,dy) <= TAKIS_TAUNT_DIST
									//kick
									if (skins["milne"])
										if ((m2) and (m2.state == S_MILNE_KICK)
										and (p2.milnekick))
											//partner taunt notif is spawned in TakisDoShorts, using the same code!
											menu.open = false
											
										end
									end
									if p2.takistable.tauntjoinable
									
										//we want their taunt number!
										takis.tauntid = p2.takistable.tauntid
										
										if (p2.takistable.tauntacceptspartners)
											takis.tauntpartner = p2
											p2.takistable.tauntpartner = p
										end
										
										local func = TAKIS_TAUNT_INIT[p2.takistable.tauntid]
										func(p)
										
										//close
										menu.open = false
									end
								end
								
							end
						end
					end
				//closing anim
				else
					menu.closingtime = $-1
					if menu.closingtime == 1
						menu.open = false
					end
				end
			end
			
			//c2 specials
			if takis.c2 > 0
				
				//slide
				if takis.c2 == 1
				and takis.onGround
				and not (p.pflags & PF_SPINNING)
				and takis.taunttime == 0
				and not takis.yeahed
				and (p.realtime > 0)
				and me.health
				and not ((takis.tauntmenu.open) and (takis.tossflag))
					S_StartSound(me,sfx_eeugh)
					S_StartSound(me,sfx_taksld)
					P_InstaThrust(me,p.drawangle,20*FU+FixedMul(3*takis.accspeed/5,me.scale))
					me.state = S_PLAY_TAKIS_SLIDE
					p.pflags = $|PF_SPINNING
					P_MovePlayer(p)
					if not ((p.cmd.forwardmove) and (p.cmd.sidemove))
					and takis.accspeed < 13*FU
						takis.slidetime = max(1,$)
						P_InstaThrust(me,p.drawangle,15*FU)
					end
					
				end
				
				//cash in combo
				if (takis.c2 < 8)
				and ((takis.c1) and  (takis.c1 < 8))
				and (takis.combo.cashable)
					takis.combo.time = 0
				end
				
				if not takis.shotgunned
				
					//shield ability
					//team new
					if takis.c2 == 1
					and not takis.onGround
					//and (p.pflags & PF_JUMPED)
					and p.powers[pw_shield] ~= SH_NONE
					and not (takis.hammerblastdown)
						TakisTeamNewShields(p)
					end
					
				else
					
					//shotgun stomp
					//literally just hammerblast lol
					if (takis.c2 == 1)
					and not takis.onGround
					and not takis.thokked
					and not (takis.hammerblastdown)
						S_StartSound(me,sfx_shgns)
						
						
						takis.hammerblastdown = 1
						p.pflags = $|PF_THOKKED
						takis.thokked = true
						P_DoJump(p,false)
						P_SetObjectMomZ(me,101*FU,true)
						
						TakisDoShotgunShot(p,true)
					end
				end
				
			end
			
			//c3 specials
			if (takis.c3 > 0)
				
				//deshotgun
				//unshotgun
				//un-shotgun
				if takis.c3 == 1
				and takis.shotgunned
					if ((takis.shotgun) and (takis.shotgun.valid))
						P_KillMobj(takis.shotgun,me)
					end
					takis.shotgun = 0
					takis.shotgunned = false
					if mapmusname ~= mapheaderinfo[gamemap].musname
						mapmusname = mapheaderinfo[gamemap].musname
					end
					if ((S_MusicName() == "WAR") or (S_MusicName() == "war"))
						P_RestoreMusic(p)
					end
				end
				
				if takis.c3 == TR
					if (P_RandomChance(10))
						P_DamageMobj(me,nil,nil,1,DMG_INSTAKILL)
					end
					if P_RandomChance(1)
					and (takis.isSinglePlayer)
						G_ExitLevel()
					end
					if P_RandomChance(FU/70)
						if takis.HUD.funny.tics == 0
							S_StartSound(nil,sfx_jumpsc,p)
							TakisAwardAchievement(p,ACHIEVEMENT_JUMPSCARE)
							takis.HUD.funny.tics = 3*TR
							takis.HUD.funny.y = 400*FU
							takis.HUD.funny.alsofunny = P_RandomChance(FU/10)
						end
					end
				end
			end
			
			if takis.taunttime > 0
				takis.stasistic = 1
				
				//taunt anims
				if me.health
					local think = TAKIS_TAUNT_THINK[takis.tauntid]
					think(p)
				end
				takis.taunttime = $-1
			else
				TakisResetTauntStuff(takis,false)
				
				if me.state == S_PLAY_TAKIS_SMUGASSGRIN
				or me.state == S_PLAY_TAKIS_SMUGASSGRIN2
					me.tics = 1
				end
			end
			
			//stuff to do while in pain
			if takis.inPain
			or takis.inFakePain
				TakisResetTauntStuff(takis)
			
				takis.hammerblastjumped = 0
				takis.recovwait = $+1
				
				if not takis.critcharged
					me.colorized = false
				end
				
				if (takis.taunttime)
				and not (takis.tauntcanparry)
					P_RestoreMusic(p)
					takis.taunttime = 0
					me.colorized = takis.wascolorized
				end
				
				// recov / recovery jump
				if (takis.jump)
				and (takis.recovwait >= TR)
					takis.ticsforpain = 0
					takis.stasistic = 0
					p.pflags = $ &~(PF_JUMPED|PF_THOKKED)
					P_DoJump(p,true)
					takis.dived,takis.thokked = false,false
					takis.inFakePain = false
				end
			else
				takis.recovwait = 0
			end
			if me.sprite2 == SPR2_PAIN
			and me.health
				me.frame = (leveltime%4)/2
			end
			
			if (p.pflags & PF_JUMPED) and not (takis.thokked)
			and me.state == S_PLAY_JUMP
				takis.thokked = false
				takis.dived = false
				takis.jumptime = $+1
			else
				takis.jumptime = 0
			end
			if takis.jumptime > 0
				if takis.jumptime < 11
				and p.pflags & PF_JUMPDOWN
					takis.wavedashcapable = true
				else
					takis.wavedashcapable = false
				end
			else
				takis.wavedashcapable = false
			end
			
			//hammerblast stuff
			if takis.hammerblastdown
				p.charflags = $ &~SF_RUNONWATER
				p.powers[pw_strong] = $|(STR_SPRING|STR_HEAVY)
				
				takis.hammerblastjumped = 0
				if takis.hammerblastdown == 1
					P_SetObjectMomZ(me,12*FU)
					takis.hammerblastwentdown = false
				end
				
				takis.thokked,takis.dived = true,true
				
				if me.momz*takis.gravflip < (8*me.scale)
				or takis.hammerblastwentdown == true
					
					local x = cos(p.drawangle)
					local y = sin(p.drawangle)
					
					
					if takis.hammerblastwentdown == false
						takis.hammerblasthitbox = P_SpawnMobjFromMobj(me,42*x,42*y,me.momz,MT_TAKIS_HAMMERHITBOX)
						takis.hammerblasthitbox.parent = me
						//takis.hammerblasthitbox.flags2 = $|MF2_DONTDRAW
					end
					
					if not (takis.hammerblastdown % 6)
					and takis.hammerblastdown > 6
					and (me.momz*takis.gravflip < 0*me.scale)
					and (takis.hammerblasthitbox and takis.hammerblasthitbox.valid)
						local ring = P_SpawnMobjFromMobj(takis.hammerblasthitbox,
							0,0,-5*me.scale*takis.gravflip,MT_WINDRINGLOL
						)
						if (ring and ring.valid)
							ring.renderflags = RF_FLOORSPRITE
							ring.frame = $|FF_TRANS50
							ring.startingtrans = FF_TRANS50
							ring.scale = FixedDiv(me.scale,2*FU)
							P_SetObjectMomZ(ring,10*me.scale)
							//i thought this would fade out the object
							ring.fuse = 10
							ring.destscale = FixedMul(ring.scale,2*FU)
							ring.colorized = true
							ring.color = SKINCOLOR_WHITE
						end
					end
					
					me.momz = $-((3*me.scale/2)*takis.gravflip)		
					takis.hammerblastwentdown = true
					
				end
				
				if takis.hammerblasthitbox
				and takis.hammerblasthitbox.valid
					local x = cos(p.drawangle)
					local y = sin(p.drawangle)
					
					if me.eflags & MFE_VERTICALFLIP
						P_MoveOrigin(takis.hammerblasthitbox,me.x+(42*x)+me.momx,me.y+(42*y)+me.momy,
							(me.z+me.height-takis.hammerblasthitbox.height)+(3*me.height/2)+me.momz
						)
					else
						P_MoveOrigin(takis.hammerblasthitbox,me.x+(42*x)+me.momx,me.y+(42*y)+me.momy,me.z-(3*me.height/2)+me.momz)
					end
				end
				
				if (me.momz*takis.gravflip <= -40*me.scale)
				and not (takis.lastmomz*takis.gravflip <= -40*me.scale)
					S_StartSound(me,sfx_fastfl)
				end
				
				takis.hammerblastdown = $+1
				
				//cancel conds.
				if not (takis.notCarried)
					
					if ((takis.hammerblasthitbox) and (takis.hammerblasthitbox.valid))
						P_RemoveMobj(takis.hammerblasthitbox)
						takis.hammerblasthitbox = nil
					end
					takis.hammerblastdown = 0
					
				elseif (me.eflags & MFE_SPRUNG
				or takis.fakesprung)
				
					/*
					if ((takis.hammerblasthitbox) and (takis.hammerblasthitbox.valid))
						P_RemoveMobj(takis.hammerblasthitbox)
						takis.hammerblasthitbox = nil
					end
					*/
					takis.hammerblastdown = 0

					/*
					S_StartSound(me, sfx_sprong)
					if (me.momz*takis.gravflip) > 0
						me.momz = 3*abs($)/2
					elseif (me.momz*takis.gravflip) < 0
						me.momz = 3*(-abs($))/2
					end
					
					me.momx = 4*$/3
					me.momy = 6*$/3
					me.state = S_PLAY_SPRING
					*/
					p.pflags = $ &~(PF_JUMPED|PF_THOKKED)
					takis.thokked = false
					takis.dived = false
				elseif not me.health
				or ((takis.inPain) or (takis.inFakePain))
				or not (takis.notCarried)
				
					if ((takis.hammerblasthitbox) and (takis.hammerblasthitbox.valid))
						P_RemoveMobj(takis.hammerblasthitbox)
						takis.hammerblasthitbox = nil
					end
					takis.hammerblastdown = 0
					
				end
				
				takis.dontlanddust = true
				if (takis.onGround or P_CheckDeathPitCollide(me))
				or (stupidbouncesectors(me,me.subsector.sector))
					me.state = S_PLAY_MELEE_FINISH
					if ((takis.hammerblasthitbox) and (takis.hammerblasthitbox.valid))
						P_RemoveMobj(takis.hammerblasthitbox)
						takis.hammerblasthitbox = nil
					end
					
					//dust effect
					if not (me.eflags & MFE_TOUCHWATER)
						for i = 0, 16
							local mt = MT_SPINDUST
							if me.eflags & MFE_UNDERWATER
								mt = MT_MEDIUMBUBBLE
							end

							local radius = me.scale*16
							local fa = (i*ANGLE_22h)
							local x = cos(me.angle)
							local y = sin(me.angle)
							local dust = P_SpawnMobjFromMobj(me,25*x,25*y,0,mt)
							dust.momx = FixedMul(sin(fa),radius)
							dust.momy = FixedMul(cos(fa),radius)
							dust.destscale = dust.scale/2
						end
					end
					
					//impact sparks
					if ((takis.lastmomz*takis.gravflip) <= -40*me.scale)
						local radius = abs(takis.lastmomz)
						for i = 0, 16
							local fa = (i*ANGLE_22h)
							local spark = P_SpawnMobjFromMobj(me,0,0,0,MT_SUPERSPARK)
							spark.momx = FixedMul(sin(fa),radius)
							spark.momy = FixedMul(cos(fa),radius)
							local spark2 = P_SpawnMobjFromMobj(me,0,0,0,MT_SUPERSPARK)
							spark2.color = me.color
							spark2.momx = FixedMul(sin(fa),radius/20)
							spark2.momy = FixedMul(cos(fa),radius/20)
						end
						
						//KILL!
						local rad = takis.lastmomz
						local px = me.x
						local py = me.y
						local br = abs(rad*10)
						local h = 20
						
						if TAKIS_ISDEBUG
							for i = 0,10
								local f1 = P_SpawnMobj(px-br,py-br,me.z+((h*FU)*i),MT_THOK)
								f1.tics = -1
								f1.fuse = TR
								f1.sprite = SPR_RING
							end
							for i = 0,10
								local f2 = P_SpawnMobj(px-br,py+br,me.z+((h*FU)*i),MT_THOK)
								f2.tics = -1
								f2.fuse = TR
								f2.sprite = SPR_RING
							end
							for i = 0,10
								local f3 = P_SpawnMobj(px+br,py-br,me.z+((h*FU)*i),MT_THOK)
								f3.tics = -1
								f3.fuse = TR
								f3.sprite = SPR_RING
							end
							for i = 0,10
								local f4 = P_SpawnMobj(px+br,py+br,me.z+((h*FU)*i),MT_THOK)
								f4.tics = -1
								f4.fuse = TR
								f4.sprite = SPR_RING
							end
						end
						searchBlockmap("objects", function(me, found)
							if found and found.valid
							and (found.health)
								if (found.flags & (MF_ENEMY|MF_BOSS))
								or (found.flags & MF_MONITOR)
								and (found.type ~= MT_EGGMAN_BOX)
									spawnragthing(found,me)
								elseif (found.type == MT_PLAYER)
									if CanPlayerHurtPlayer(p,found.player)
										TakisAddHurtMsg(found.player,HURTMSG_HAMMERQUAKE)
										P_DamageMobj(found,me,me,abs(me.momz/FU/4))
									end
									DoQuake(found.player,
										FixedMul(
											75*FU, FixedDiv( br-FixedHypot(found.x-me.x,found.y-me.y),br )
										),
										15
									)
								elseif (SPIKE_LIST[found.type] == true)
									P_KillMobj(found,me,me)
								end
							end
						end, me, px-br, px+br, py-br, py+br)		
					end
					
					S_StartSoundAtVolume(me, sfx_pstop,4*255/5)
					DoQuake(p,me.scale*16,10,37*me.scale)
					TakisBreakAndBust(p,me)
					
					//holding jump while landing? boost us up!
					if takis.jump > 0
					and me.health
					and not ((takis.inPain) or (takis.inFakePain))
						takis.hammerblastjumped = 1
						P_DoJump(p,false)
						me.state = S_PLAY_ROLL
						me.momz =  (7*$/4)+((takis.hammerblastdown*takis.gravflip*me.scale)/8)+(-takis.lastmomz/8)
						if (takis.inGoop)
							me.momz = $+( 22*me.scale + ((takis.hammerblastdown*takis.gravflip/8)*me.scale))*takis.gravflip
						end
						S_StartSoundAtVolume(me,sfx_kc52,180)
					
					//holding spin while landing? boost us forward!
					elseif (takis.use > 0)
					and me.health
						if not takis.dropdashstale
							S_StartSound(me,sfx_cltch2)
						end
						
						me.state = S_PLAY_RUN
						
						takis.clutchingtime = 0
						takis.glowyeffects = takis.hammerblastdown/3
						
						local ang = (p.cmd.angleturn << 16) + R_PointToAngle2(0, 0, p.cmd.forwardmove << 16, -p.cmd.sidemove << 16)
						
						if ((me.flags2 & MF2_TWOD)
						or (twodlevel))
							if (p.cmd.sidemove > 0)
								ang = p.drawangle
							elseif (p.cmd.sidemove < 0)
								ang = InvAngle(p.drawangle)
							end
						end
						
						local thrust = (10*me.scale)+((takis.hammerblastdown*me.scale)/2)+(takis.use*me.scale/8)
						if (p.powers[pw_sneakers])
							thrust = $*9/5
						end
						
						P_InstaThrust(me,ang,
							FixedDiv(
								FixedMul(takis.accspeed,me.scale)+thrust,
								max(FU,takis.dropdashstale*3/2*me.scale)
							),
							true
						)
						P_MovePlayer(p)
						
						//effect
						local ghost = P_SpawnGhostMobj(me)
						ghost.scale = 3*me.scale/2
						ghost.destscale = FixedMul(me.scale,2)
						ghost.colorized = true
						ghost.frame = $|TR_TRANS10
						ghost.blendmode = AST_ADD
						for i = 0, 4 do
							P_SpawnSkidDust(p,25*me.scale)
						end
						
						takis.dropdashstale = $+1
						takis.dropdashstaletime = 2*TR
					end
					
					takis.hammerblastdown = 0
				end
				
			else
				p.powers[pw_strong] = $ &~(STR_SPRING|STR_HEAVY)
				if ((takis.hammerblasthitbox) and (takis.hammerblasthitbox.valid))
					P_RemoveMobj(takis.hammerblasthitbox)
					takis.hammerblasthitbox = nil
				end
				S_StopSoundByID(me,sfx_fastfl)
			end
			
			if takis.hammerblastjumped
				if not (takis.hammerblastjumped % 6)
					S_StartSoundAtVolume(me,sfx_airham,3*255/5)
				end
				takis.hammerblastjumped = $+1
				if takis.hammerblastjumped == (6*7)
					takis.hammerblastjumped = 0
				end
			end
			
			if takis.clutchingtime
			or takis.glowyeffects
			and ((me.health) or (p.playerstate == PST_LIVE))
			and not takis.shotgunned
			or (takis.hammerblastdown and (me.momz*takis.gravflip <= -40*me.scale))
				takis.clutchingtime = $+1
				takis.afterimaging = true
				
				takis.dustspawnwait = $+FixedDiv(takis.accspeed,64*FU)
				while takis.dustspawnwait > FU
					takis.dustspawnwait = $-FU
					//xmom code
					if (takis.onGround)
					and not (takis.clutchingtime % 10)
					and (takis.accspeed >= 45*FU)
						local d1 = P_SpawnMobjFromMobj(me, -20*cos(p.drawangle + ANGLE_45), -20*sin(p.drawangle + ANGLE_45), 0, MT_TAKIS_CLUTCHDUST)
						local d2 = P_SpawnMobjFromMobj(me, -20*cos(p.drawangle - ANGLE_45), -20*sin(p.drawangle - ANGLE_45), 0, MT_TAKIS_CLUTCHDUST)
						d1.scale = $*2
						d1.destscale = FU/10
						d1.angle = R_PointToAngle2(me.x+me.momx, me.y+me.momy, d1.x, d1.y) --- ANG5

						d2.scale = $*2
						d2.destscale = FU/10
						d2.angle = R_PointToAngle2(me.x+me.momx, me.y+me.momy, d2.x, d2.y) --+ ANG5
					end
				end
				
				
				p.charflags = $|SF_CANBUSTWALLS
				
				if (takis.accspeed >= skins[TAKIS_SKIN].normalspeed)
					p.charflags = $|SF_RUNONWATER
				else
					p.charflags = $ &~SF_RUNONWATER
				end
				
				if not (p.pflags & PF_SPINNING)
				and not (takis.glowyeffects)
					TakisCreateAfterimage(p,me)
				end
				
				p.runspeed = takis.accspeed-FU

			else
				p.charflags = $ &~(SF_CANBUSTWALLS|SF_RUNONWATER)
				p.runspeed = skins[TAKIS_SKIN].runspeed
				takis.afterimagecolor = 1
			end
			
			//hold this off until we can detect udmf bouncy fofs
			/*
			print(stupidbouncesectors(me,me.subsector.sector))
			stupidbouncesectors(me,me.subsector.sector)
			if (stupidbouncesectors(me,me.subsector.sector))
				print(":bouncy fof")
			end
			*/
			
			//stuff to do while grounded
			if takis.onGround
				if (p.pflags & PF_SHIELDABILITY)
				and (p.powers[pw_shield] == SH_BUBBLEWRAP)
					P_DoBubbleBounce(p)
					p.pflags = $ &~PF_THOKKED
					takis.thokked = false
					me.state = S_PLAY_ROLL
				end
				
				takis.ticsforpain = 0
				if takis.inFakePain
					takis.fakeflashing = 4*flashingtics/5
				end
				takis.inFakePain = false
				
				if not P_CheckDeathPitCollide(me)
					takis.timesdeathpitted = 0
				end
				if p.pflags & PF_SPINNING
				and takis.accspeed >= 10*FU
				and (me.state == S_PLAY_TAKIS_SLIDE)
					P_SpawnSkidDust(p,8*me.scale+( FixedMul(takis.accspeed-(10*FU),me.scale)*4/5 ),sfx_s3k64)
					if takis.accspeed >= 40*FU
						P_SpawnSkidDust(p,3*me.scale+( FixedMul(takis.accspeed-(10*FU),me.scale)*3/5 ))
					end
					P_ButteredSlope(me)
					//AGAIN !!
					P_ButteredSlope(me)
					takis.clutchingtime = $-2
				end
				takis.dived = false
				if takis.hammerblastjumped >= 3
					takis.hammerblastjumped = 0
				end
				if not ((me.eflags & MFE_TOUCHWATER) and not ((me.eflags & MFE_UNDERWATER) or (P_IsObjectInGoop(me))))
					takis.lastgroundedpos = {me.x,me.y,me.z}
				end
				takis.thokked = false
				
				//keep sliding
				if (takis.c2)
				and (takis.accspeed > 5*FU)
				and (takis.notCarried)
					if me.state ~= S_PLAY_TAKIS_SLIDE
					and me.health
						S_StartSound(me,sfx_taksld)
						me.state = S_PLAY_TAKIS_SLIDE
					end
					takis.slidetime = max(1,$)
					p.pflags = $|PF_SPINNING
				end
					
				//footsteps
				if me.state == S_PLAY_WALK
				or me.sprite2 == SPR2_WALK
					if ((me.frame == A) or (me.frame == E))
						if not takis.steppedthisframe
							S_StartSoundAtVolume(me,sfx_takst0,255/2)
							S_StartSound(me,P_RandomRange(sfx_takst1,sfx_takst3))
							takis.steppedthisframe = true
							P_SpawnSkidDust(p,3*me.scale)
						end
					else
						takis.steppedthisframe = false
					end
				else
					takis.steppedthisframe = false
				end
				if me.eflags & MFE_JUSTHITFLOOR
				and not (me.eflags & (MFE_TOUCHWATER|MFE_TOUCHLAVA))
				and not P_CheckDeathPitCollide(me)
				and me.health
				
					if (takis.dontlanddust == false)
					and (takis.onPosZ)
						S_StartSoundAtVolume(me,sfx_takst0,255*4/5)
						S_StartSound(me,sfx_takst4)
						p.jp = 1
						p.jt = -5
						if not takis.crushtime
						and (takis.saveddmgt ~= DMG_CRUSHED)
							DoTakisSquashAndStretch(p,me,takis)
						end
						P_SetOrigin(me,me.x,me.y,me.z)
						for i = 0, 8
							local mt = MT_SPINDUST
							if me.eflags & MFE_UNDERWATER
								mt = MT_MEDIUMBUBBLE
							end
							local radius = me.scale*16
							local fa = (i*ANGLE_45)
							local dust = P_SpawnMobjFromMobj(me,0,0,0,mt)
							local mz = takis.prevmomz/10
							dust.momx = FixedMul(FixedMul(sin(fa),radius),mz)
							dust.momy = FixedMul(FixedMul(cos(fa),radius),mz)
							dust.destscale = dust.scale/2
							takis.dontlanddust = true
						end
					end
				end
				
				if (P_PlayerTouchingSectorSpecial(p, 3, 6) 
				or P_PlayerTouchingSectorSpecial(p, 3, 5))
					P_Thrust(me,me.angle,takis.prevspeed)
				end
			end
			takis.prevmomz = me.momz
			
			/*
			if takis.hurtfreeze > 0
				me.momx,me.momy,me.momz = 0,0,0
				p.powers[pw_flashing] = 3
				if takis.hurtfreeze <= TR
					if not (leveltime % 2)
						me.flags2 = $|MF2_DONTDRAW
					else
						me.flags2 = $ &~MF2_DONTDRAW
					end
				end
				
				if takis.hurtfreeze == TR
					local x
					local y
					local z
					x,y,z = unpack(takis.lastgroundedpos)
					P_SetOrigin(me,x,y,z+(me.height*takis.gravflip))
				end
				
				if takis.hurtfreeze == 1
					takis.fakeflashing = flashingtics
				end
				
				takis.hurtfreeze = $-1
			end
			*/
			
			if takis.beingcrushed
				me.spriteyscale = FU/3
				me.spritexscale = FU*3
				
				//keep increasing this until it reaches
				//2*TR, kill if then
				takis.timescrushed = $+1
				
				if not takis.crushtime
					S_StartSound(me,sfx_tsplat)
				end
				//used to reset crushed
				takis.crushtime = TR
			else
				if not takis.crushtime
					if (takis.saveddmgt ~= DMG_CRUSHED)
						DoTakisSquashAndStretch(p,me,takis)
					end
				else
					local div = (takis.crushtime/8)
					div = max(1,$)
					me.spriteyscale = FU/div
					me.spritexscale = FU*div					
				end
			end
			
			takis.beingcrushed = false
			
			//are we dead?
			if (not me.health)
			or (p.playerstate ~= PST_LIVE)
				
				TakisDeathThinker(p,me,takis)

				if ((takis.shotgun) and (takis.shotgun.valid))
					P_KillMobj(takis.shotgun,me)
				end
				takis.shotgun = 0
				takis.shotgunned = false
				
				if ((takis.body) and (takis.body.valid))
					P_MoveOrigin(takis.body,me.x,me.y,me.z)
				end
				
				TakisResetAliments(takis)
				takis.wentfast = 0
				
				//death thinker and anims are called in 
				//TakisDoShorts
				
				takis.heartcards = 0
				takis.hammerblastjumped = 0
				takis.taunttime = 0
				
				takis.clutchingtime = 0
				takis.afterimaging = false
				
				if S_SoundPlaying(me,skins[TAKIS_SKIN].soundsid[SKSPLDET3])
					S_StopSoundByID(me,skins[TAKIS_SKIN].soundsid[SKSPLDET3])
					me.frame = A
					me.sprite2 = SPR2_TDED
					for i = 1, 6
						A_BossScream(me,1,MT_SONIC3KBOSSEXPLODE)
					end
					S_StartSound(me,sfx_tkapow)
					DoQuake(p,me.scale*8,10,8*me.scale)
					takis.altdisfx = 3
				elseif S_SoundPlaying(me,skins[TAKIS_SKIN].soundsid[SKSPLDET4])
					S_StopSoundByID(me,skins[TAKIS_SKIN].soundsid[SKSPLDET4])
					me.frame = A
					me.sprite2 = SPR2_DRWN
					S_StartSound(me,sfx_takoww)
					takis.altdisfx = 4
				end
				
			elseif p.playerstate == PST_LIVE
				takis.deathanim = 0
				takis.altdisfx = 0
				takis.saveddmgt = 0
				takis.stoprolling = false
			end
			
			//heal cards
			if takis.heartcardpieces >= 7
				TakisHealPlayer(p,me,takis,1)
				S_StartSound(nil, sfx_takhel, p)
				takis.heartcardpieces = 0
			end
			
			//hiiii nick :))
			if ((PizzaTime) and (PizzaTime.sync.PizzaTime))
			and not (p.pt_mode.pizzaface)
				takis.HUD.timer.int = {90-(13*6)+75+15, (62-6)+4+8}	
			end
			
			//handle combo stuff here
			if takis.combo.time ~= 0
				if not (takis.notCarried)
				or ((p.pflags & PF_STASIS) and not (takis.taunttime and takis.tauntid))
				//or (takis.hurtfreeze ~= 0)
				or ((p.exiting) and not (p.pflags & PF_FINISHED))
				or (p.powers[pw_nocontrol])
				or (takis.nocontrol)
					takis.combo.frozen = true
					if ((p.exiting) and not (p.pflags & PF_FINISHED))
						takis.combo.cashable = true
					end
				else
					takis.combo.time = $-1
					takis.combo.frozen = false
					takis.combo.cashable = false
				end
				
				if takis.combo.time > TAKIS_MAX_COMBOTIME	
					takis.combo.time = TAKIS_MAX_COMBOTIME
				end
				
				if takis.combo.lastcount < TAKIS_NET.partdestroy
				and takis.combo.count >= TAKIS_NET.partdestroy
				and not takis.combo.dropped
					takis.combo.awardable = true
					takis.HUD.combo.tokengrow = FU/2
					MeSoundHalfVolume(sfx_rakupp,p)
				end
				
				local cc = takis.combo.count
				takis.combo.score = ((cc*cc)/2)+(17*cc)
				
				takis.combo.outrotics = 0
				
				takis.combo.verylevel = takis.combo.count/(#TAKIS_COMBO_RANKS*TAKIS_COMBO_UP)
				
				if takis.combo.time <= TAKIS_MAX_COMBOTIME/4
					takis.HUD.combo.meter.shake = (P_RandomFixed())*3/2
				elseif takis.combo.time <= TAKIS_MAX_COMBOTIME/2
					takis.HUD.combo.meter.shake = P_RandomFixed()
				else
					if takis.HUD.combo.meter.shake > 0
						takis.HUD.combo.meter.shake = $-3
					else
						takis.HUD.combo.meter.shake = 0
					end
				end
			else
				takis.combo.frozen = false
				takis.combo.cashable = false
				if takis.HUD.combo.meter.shake > 0
					takis.HUD.combo.meter.shake = $-3
				else
					takis.HUD.combo.meter.shake = 0
				end
				
				if takis.combo.count
					takis.combo.failcount = takis.combo.count
					takis.combo.count = 0
					S_StartSound(nil,sfx_kc59,p)
					takis.combo.outrotics = 7*TR/5
					
					takis.HUD.flyingscore.lastscore = takis.combo.score
					
					S_StartSound(nil,sfx_chchng,p)
					P_AddPlayerScore(p,takis.combo.score)
					
					takis.HUD.flyingscore.num = takis.combo.score
					takis.HUD.flyingscore.tics = $+2*TR
					takis.HUD.flyingscore.x = (hudinfo[HUD_RINGS].x+5-8)*FU+(45*FU)
					takis.HUD.flyingscore.y = (hudinfo[HUD_RINGS].y+14)*FU+(20*FU)
				
					if not (p.pflags & PF_FINISHED)
						if not takis.combo.dropped
							takis.combo.dropped = true
							if takis.combo.lastcount >= TAKIS_NET.partdestroy
								MeSoundHalfVolume(sfx_rakdns,p)
							end
						end
					end
				end
				
				takis.combo.score = 0
				
				if takis.combo.time < 0
					takis.combo.time = 0
				end
				
				takis.combo.verylevel = 0
				takis.combo.rank = 1
			end
			
			//we're being carried!
			if not (takis.notCarried)
				takis.thokked,takis.dived = false,false
				takis.inFakePain = false
				if not (takis.inwaterslide)
					takis.afterimaging = false
				end
				takis.hammerblastdown = 0
			end
			
			//this is actually stupid
			if p.exiting > 0
				
				if (p.pflags & PF_FINISHED)
					takis.combo.time = 0
					takis.fakeexiting = $+1
					//time for bonuses!
					if takis.fakeexiting == 1
						
						if (((takis.heartcards == 0)
						and (takis.heartcardpieces == 0))
						and (TAKIS_NET.usesheartcards))
							TakisAwardAchievement(p,ACHIEVEMENT_HARDCORE)
							if (TAKIS_NET.texasarea and not TAKIS_NET.donotsunstroke)
							and (takis.lastsunstroke)
								TakisAwardAchievement(p,ACHIEVEMENT_ARIDCORE)
							end
						end
						
						if takis.shotgunned
							if ((takis.shotgun) and (takis.shotgun.valid))
								P_KillMobj(takis.shotgun,me)
							end
							takis.shotgun = 0
							takis.shotgunned = false
							P_AddPlayerScore(p,80000)
							takis.bonuses["shotgun"].tics = 3*TR+18
							takis.bonuses["shotgun"].score = 80000
							takis.HUD.flyingscore.scorenum = $+80000
							S_StartSound(nil,sfx_chchng,p)
						end	
					end
					
					if takis.combo.awardable
						takis.combo.awardable = false
						P_AddPlayerScore(p,50000)
						takis.HUD.flyingscore.scorenum = $+50000
						takis.bonuses["ultimatecombo"].tics = 3*TR+18
						takis.bonuses["ultimatecombo"].score = 50000
						S_StartSound(nil,sfx_chchng,p)
						TakisAwardAchievement(p,ACHIEVEMENT_COMBO)
					end
					
					if (p.exiting ~= 1)
						if (takis.heartcards or takis.heartcardpieces)
							local tic = 77/TAKIS_MAX_HEARTCARDS
							tic = $ or 1
							
							if not (takis.fakeexiting % tic)
							
								if takis.heartcards
									takis.heartcards = $-1
									S_StartSound(nil,sfx_takhel,p)
									P_AddPlayerScore(p,1000)
									table.insert(takis.bonuses.cards,{tics = TR+18,score = 1000,text = "\x8EHeart Card"})
									//takis.bonuses["heartcard"].tics = TR+18
									//takis.bonuses["heartcard"].score = 1000
									takis.HUD.flyingscore.scorenum = $+1000
								elseif takis.heartcardpieces
									takis.heartcardpieces = $-1
									S_StartSound(nil,sfx_itemup,p)
									P_AddPlayerScore(p,1000/7)
									table.insert(takis.bonuses.cardpieces,{tics = TR+18,score = 1000/7,text = "\x8EHeart Card Piece"})
									//takis.bonuses["heartcardpiece"].tics = TR+18
									//takis.bonuses["heartcardpiece"].score = 1000/7
									takis.HUD.flyingscore.scorenum = $+250
								end
								
							end
						end
					//about to leave and still have cards left? cash them all in at once!
					else
						if takis.heartcards 
							S_StartSound(nil,sfx_takhel,p)
							P_AddPlayerScore(p,1000*takis.heartcards)
							takis.heartcards = 0
							takis.HUD.flyingscore.scorenum = $+1000*takis.heartcards
						elseif takis.heartcardpieces
							S_StartSound(nil,sfx_itemup,p)
							P_AddPlayerScore(p,250*takis.heartcardpieces)
							takis.HUD.flyingscore.scorenum = $+250*takis.heartcardpieces
							takis.heartcardpieces = 0
						end
						TakisSaveStuff(p)
					end
				else
					//exiting and no pf_finished?
					if TAKIS_NET.inbossmap
					and (gametype == GT_COOP)
					/*
					or (TAKIS_NET.exitingcount == TAKIS_NET.playercount)
						if (TAKIS_NET.exitingcount == TAKIS_NET.playercount)
						and takis.finishwait == 0
							takis.finishwait = TR
						end
					*/	
						//if not takis.finishwait
							p.pflags = $|PF_FINISHED
						//end
					end
				end
				
				if not takis.setmusic
				and (p.pflags & PF_FINISHED)
					ChangeTakisMusic("_ABCLR", false, p)
					takis.setmusic = true
					takis.yeahwait = (2*TR)+(TR/2)+5
				end

			
				if takis.yeahwait == 0
				and (p.powers[pw_carry] ~= CR_NIGHTSMODE)
				//and (p.pflags & PF_FINISHED)
					
					if not takis.yeahed
						if p.panim == PA_IDLE
						and ((takis.onGround) or P_CheckDeathPitCollide(me))
						and takis.yeahwait == 0
							if not takis.camerascale
								takis.camerascale = p.camerascale
								p.camerascale = 28221
							end
							S_StartSound(me,sfx_tayeah)
							takis.yeahed = true
						end
					end
				end
			else
				takis.fakeexiting = 0
				takis.yeahed = false
				takis.setmusic = false
				takis.yeahwait = 0
			end
			
			/*
			if takis.io.nostrafe == 0
			and (p.powers[pw_carry] ~= CR_NIGHTSMODE)
				if ((me.momx) and (me.momy))
					p.drawangle = R_PointToAngle2(0,0, me.momx,me.momy)
				end
			end
			*/
			
			if p.ptje_rank
			and gametype == GT_PIZZATIMEJISK
				local per = (PTJE.maxrankpoints)/6
				takis.HUD.rank.percent = per
				
				if p.score < per
					takis.HUD.rank.score = p.score
				elseif p.score <= per*2
					takis.HUD.rank.score = p.score-(per)
				elseif p.score <= per*3
					takis.HUD.rank.score = p.score-(per*2)
				elseif p.score <= per*4
					takis.HUD.rank.score = p.score-(per*3)
				elseif p.score <= per*5
					takis.HUD.rank.score = p.score-(per*4)
				elseif p.score <= per*6
					takis.HUD.rank.score = p.score-(per*5)
				//we dont need anything past this point
				//since S and P ranks dont use fills
				end
				takis.HUD.rank.score = $+takis.combo.score
				if takis.HUD.flyingscore.tics
					takis.HUD.rank.score = $-takis.HUD.flyingscore.lastscore
				end
				
				if ranktonum[p.ptje_rank] ~= takis.lastrank
				and not (p.pizzaface)
					local r = ranktonum[p.ptje_rank]
					//we went up!
					if r > takis.lastrank
						if r == 6
							MeSoundHalfVolume(sfx_rakupp,p)
						elseif r == 5
							MeSoundHalfVolume(sfx_rakups,p)
						elseif r == 4
							MeSoundHalfVolume(sfx_rakupa,p)
						elseif r == 3
							MeSoundHalfVolume(sfx_rakupb,p)
						elseif r == 2
							MeSoundHalfVolume(sfx_rakupc,p)
						end
					//down?
					else
						if r == 5
							MeSoundHalfVolume(sfx_rakdns,p)
						elseif r == 4
							MeSoundHalfVolume(sfx_rakdna,p)
						elseif r == 3
							MeSoundHalfVolume(sfx_rakdnb,p)
						elseif r == 2
							MeSoundHalfVolume(sfx_rakdnc,p)
						elseif r == 1
							MeSoundHalfVolume(sfx_rakdnd,p)

						end
					end
					takis.HUD.rank.grow = FRACUNIT/3
				end		
			end
			
			takis.dontlanddust = false
			takis.prevspeed = takis.accspeed
			takis.lastmomz = me.momz
			//these are stupid
			takis.lastskincolor = p.skincolor
			takis.lastsunstroke = takis.aliments.sunstroked
		else
		
			if not takis.otherskin
				takis.otherskin = true
				me.colorized = takis.wascolorized
				TakisResetTauntStuff(takis,true)
			else
				takis.otherskintime = $+1
			end
			
			takis.combo.time = 0
			TakisAnimateHappyHour(p)
			if (JISK_PIZZATIMETICS)
			or ((PTJE) and (PTJE.pizzatime_tics))
			and (takis.io.nohappyhour == 0
			and takis.io.morehappyhour == 1)
				local tics = JISK_PIZZATIMETICS or PTJE.pizzatime_tics
				
				if (tics == 1)
					S_StartSound(nil,sfx_mclang)
				end
				
				if (me.health)
				//how convienient that 8 tics just so happens to be
				//exactly 22 centiseconds!
				and (tics == 8)
					if (p.happyhourscream
					and p.happyhourscream.skin == me.skin)
						S_StartSound(nil,p.happyhourscream.sfx,p)
					end
				end
				
				if (tics <= TR)
					P_StartQuake((72-(2*tics))*FU,1)
				end
				
			end
			
			if ((takis.shotgun) and (takis.shotgun.valid))
				P_KillMobj(takis.shotgun,me)
				if mapmusname ~= mapheaderinfo[gamemap].musname
					mapmusname = mapheaderinfo[gamemap].musname
				end
				if ((S_MusicName() == "WAR") or (S_MusicName() == "war"))
					P_RestoreMusic(p)
				end
				
			end
			takis.shotgun = 0
			takis.shotgunned = false			
			
		end
		
		//outside of shorts (and skin check!!!!) to check for
		//last rank
		if (p.ptje_rank)
			takis.lastrank = ranktonum[p.ptje_rank]
		end

		if (takis.fakesneakers)
			
			if takis.otherskin
				//ffoxd's smoothspintrilas
				if not me.prevz
				or not me.prevleveltime 
				or (me.prevleveltime ~= leveltime - 1) then
				   me.prevz = me.z
				end

				local rmomz = me.z - me.prevz
				me.prevz = me.z
				me.prevleveltime = leveltime
				
				takis.rmomz = rmomz		
			end
			
			p.powers[pw_sneakers] = max($,takis.fakesneakers)
			takis.fakesneakers = $-1
			
			if takis.accspeed > FU
				TakisDoWindLines(me)
			end
			
			if takis.fakesneakers == 1
				S_StartSound(nil,sfx_tspddn,p)
			end
		end
		
		for i = 0,#takis.hurtmsg-1
			if takis.hurtmsg[i].tics > 0
				takis.hurtmsg[i].tics = $-1
			end
		end
		
		takis.combo.lastcount = takis.combo.count
		takis.lastmap = gamemap
		takis.lastgt = gametype
		takis.lastdestroyed = takis.thingsdestroyed
	end
	
end)

addHook("PlayerSpawn", function(p)
	if p.takistable
		local takis = p.takistable
		local me = p.realmo
		
		TakisResetHammerTime(p)
		
		takis.heartcards = TAKIS_MAX_HEARTCARDS
		takis.heartcardpieces = 0
		
		takis.taunttime = 0
		takis.tauntid = 0
		
		takis.clutchingtime = 0
		takis.clutchspamcount = 0
		
		takis.yeahed = false
		takis.yeahwait = 0
		
		takis.thokked, takis.dived = false,false
		
		takis.combo.time = 0
		
		takis.wentfast = 0
		TakisResetAliments(takis)
		
		if ((takis.body) and (takis.body.valid))
			P_KillMobj(takis.body)
		end
		takis.body = 0
		
		/*
		if ((takis.shotgun) and (takis.shotgun.valid))
			P_KillMobj(takis.shotgun,me)
		end
		takis.shotgun = 0
		takis.shotgunned = false
		
		if ((S_MusicName() == "WAR") or (S_MusicName() == "war"))
			P_RestoreMusic(p)
		end
		
		if ((p.mo) and (p.mo.valid))
			takis.lastgroundedpos = {p.mo.x,p.mo.y,p.mo.z}
		end
		*/
		
		takis.fakeflashing = 0
		takis.stasistic = 0
		
		TakisResetTauntStuff(takis,true)
		
		if gamemap ~= takis.lastmap
		or gamemap ~= takis.lastgt
			takis.combo.dropped = false
			takis.combo.awardable = false
		end
		
		if not (splitscreen or multiplayer)
		and p.starpostnum == 0
			takis.combo.dropped = false
			takis.combo.awardable = false
		end
		
		takis.thingsdestroyed = 0
		
		if ultimatemode
		and not (TAKIS_NET.inspecialstage or takis.inNIGHTSMode)
			if not ((takis.shotgun) and (takis.shotgun.valid))
				local x = cos(p.drawangle-ANGLE_90)
				local y = sin(p.drawangle-ANGLE_90)
				
				takis.shotgunned = true
				takis.shotgun = P_SpawnMobjFromMobj(me,16*x,16*y,me.height/2,MT_TAKIS_SHOTGUN)
				takis.shotgun.target = me
				takis.shotgun.angle = p.drawangle
				S_StartSound(nil,sfx_shgnl,p)
				ChangeTakisMusic("war",true,p)
				if (takis.io.ihavemusicwad)
					mapmusname = "war"
				end
			end
		end
	else
		if ultimatemode
			p.takis = {
				shotgunnotif = 6*TR
			}
		end
	end
end)

addHook("PlayerCanDamage", function(player, mobj)
	if not player.mo 
	or not player.mo.valid 
		return
	end
	
	if player.mo and player.mo.valid and player.mo.skin == TAKIS_SKIN
		//basically if we can do the pt afterimages
		if not player.takistable
			return
		end
		
		local me = player.mo
		
		if player.takistable.afterimaging
		or (me.state == S_PLAY_TAKIS_SLIDE)
			if L_ZCollide(me,mobj)
			and (mobj.flags & MF_ENEMY)
			//and (mobj.type ~= MT_ROSY)
			and (mobj.type ~= MT_SHELL)
				
				//prevent killing blow sound from mobjs way above/below us
				
				local bam = P_SpawnMobjFromMobj(mobj,0,0,0,MT_TNTDUST)
				bam.state = mobjinfo[MT_MINECART].deathstate 
				
				//P_KillMobj(mobj, me, me) //actually kill the thing. looking at you, lance-a-bots!
				
				spawnragthing(mobj,me)
				return true
				
			end
			
		end
	end
end)

addHook("MobjDamage", function(mo,inf,sor,_,dmgt)
	if not mo
	or not mo.valid
		return
	end
	
	if mo.player.takistable.inFakePain
		return true
	end

	if ((mo.player.powers[pw_flashing])
	and (mo.player.powers[pw_carry] == CR_NIGHTSMODE))
		return
	end

	if mo.player.deadtimer > 10
		return
	end
	
	if mo.skin ~= TAKIS_SKIN
		return
	end

	//BUT!!
	if mo.player.takistable.accspeed >= (6*(40*FU)/5)
	and mo.player.takistable.afterimaging
		return true
	end

	
	
	if (mo.player.takistable.taunttime > 0)
	and inf and inf.valid
	and (mo.player.takistable.tauntcanparry)
		local me = mo
		local p = mo.player
		local soap = mo.player.takistable
		
		S_StartSound(me,sfx_sparry)
		
		soap.taunttime = 0
		soap.tauntid = 0
		
		P_SetObjectMomZ(me,10*me.scale)
		local pthrust = R_PointToAngle2(inf.x-inf.momx,inf.y-inf.momy,me.x-me.momx,me.y-me.momy)
		P_Thrust(me,pthrust,5*me.scale)
		P_MovePlayer(p)
		me.state = S_PLAY_ROLL
		
		S_StopSoundByID(mo,sfx_antow1)
		S_StopSoundByID(mo,sfx_antow2)
		S_StopSoundByID(mo,sfx_antow3)
		S_StopSoundByID(mo,sfx_antow4)
		S_StopSoundByID(mo,sfx_antow5)
		S_StopSoundByID(me, sfx_tawhip)
		
		local bam = P_SpawnMobjFromMobj(mo,0,0,0,MT_TNTDUST)
		bam.state = mobjinfo[MT_MINECART].deathstate 

		if inf.player
			if inf.player.powers[pw_invulnerability]
				inf.player.powers[pw_invulnerability] = 0
				P_RestoreMusic(inf.player)
			end
			P_DoPlayerPain(inf.player,mo,mo)
			local angle = R_PointToAngle2(mo.x,mo.y,inf.x,inf.y )
			local thrust = FU*10
			P_SetObjectMomZ(inf,thrust)
			P_Thrust(inf,angle,thrust)
			inf.player.powers[pw_flashing] = 2
		end
		if inf
			P_DamageMobj(inf,mo,mo)
		end
		
		if ((sor) and (sor.valid))
			P_DamageMobj(sor,mo,mo)
		end
		
		p.powers[pw_flashing] = TICRATE
		return true
	end
	
	if mo.health
	or ((mo.player.takistable.heartcards)
	or ((mo.player.takistable.heartcards == 0) and (mo.player.rings)))
		S_StartSound(me,sfx_smack)
		S_StartAntonOw(mo)
		DoQuake(mo.player,30*FU*(max(1,mo.player.timeshit*2/3)),15)
	end

	if mo.player.powers[pw_carry] == CR_NIGHTSMODE
		return
	end
	
	if (mo.player.powers[pw_shield] == SH_ARMAGEDDON)
		TakisPowerfulArma(mo.player)
		
	end
	
	if dmgt == DMG_FIRE
		TakisResetAliments(mo.player.takistable,"freezing")
	end
	
	//combo penalty
	if (mo.player.takistable.shotgunned)
		TakisGiveCombo(mo.player,mo.player.takistable,false,false,true)
	end
	
	if (mo.player.timeshit == 1)
	and mo.player.ptje_rank
		mo.player.takistable.HUD.rank.grow = FRACUNIT/3
		S_StartSound(nil,sfx_didbad,mo.player)
	end
	
	if mo.player.takistable.heartcards > 0
	and (mo.player.powers[pw_shield] == SH_NONE)
		
	mo.player.powers[pw_flashing] = TR
	mo.player.takistable.ticsforpain = TR
	S_StartSound(mo,sfx_shldls)
	if (dmgt & DMG_SPIKE)
		S_StartSound(mo,sfx_spkdth)
	end
	TakisHealPlayer(mo.player,mo,mo.player.takistable,3)
	mo.player.timeshit = $+1
	
	if (mo.player.timeshit == 1)
	and mo.player.ptje_rank
		mo.player.takistable.HUD.rank.grow = FRACUNIT/3
		S_StartSound(nil,sfx_didbad,mo.player)
	end
	
	
	if inf
	and inf.valid
		local ang = R_PointToAngle2(mo.x,mo.y, inf.x, inf.y)
		P_InstaThrust(mo,ang,-9*mo.scale)
	end
	P_SetObjectMomZ(mo,14*mo.scale)
	mo.state = S_PLAY_PAIN
	mo.player.takistable.inFakePain = true
	mo.player.pflags = $ &~(PF_THOKKED|PF_JUMPED)
	mo.player.takistable.thokked = false
	mo.player.takistable.dived = false
	return true
	
	end
	
end,MT_PLAYER)

addHook("MobjDamage", function(tar,inf,src)
	if not tar
	or not tar.valid
		return
	end
	
	if not src
	or not src.valid
		return
	end
	
	if src.player
	and src.skin == TAKIS_SKIN
	and src.player.takistable.combo.time
		for i = 0,2
			TakisGiveCombo(src.player,src.player.takistable,false,false)
		end
	end
end,MT_PLAYER)	
//enemy knockback
local function stopmom(takis,me,ang)
	if takis.accspeed < (6*(40*FU)/5)
	and (me.player.powers[pw_invulnerability] == 0)
	and not (me.player.pflags & PF_SPINNING)
	and not ((PTJE)and(PTJE.pizzatime))
		me.momx,me.momy = 0,0
		P_SetObjectMomZ(me,6*me.scale)
		P_Thrust(me,ang,-6*me.scale)
	end
end
//disciplinary action
local function dodisciplinaryaction(t,tm,double)
	if CanPlayerHurtPlayer(t.player,tm.player,true)
	or TAKIS_NET.dontspeedboost
		return
	end
	
	S_StartSound(tm,sfx_tspdsn)
	
	if not tm.player.takistable.fakesneakers
		S_StartSound(nil,sfx_tspdup,tm.player)
	end
	if not t.player.takistable.fakesneakers
		S_StartSound(nil,sfx_tspdup,t.player)
	end

	if not double
		tm.player.takistable.fakesneakers = 2*TR
		t.player.takistable.fakesneakers = 2*TR
	else
		tm.player.takistable.fakesneakers = 4*TR
		t.player.takistable.fakesneakers = 4*TR
	end
end

local function knockbacklolll(t,tm)
	if not t
	or not t.valid
		return
	end
	
	if not tm
	or not tm.valid
		return
	end
	
	if not L_ZCollide(t,tm)
		return
	end
	
	local p = t.player
	local takis = p.takistable
	local me = p.mo
	
	//BUT.....
	if t.skin ~= TAKIS_SKIN
		return
	end

	if tm.parent == t
		return false
	
	end
	
	local takis = t.player.takistable
	
	local ff = CV_FindVar("friendlyfire").value

	//is this a player we're running into?
	if tm.type == MT_PLAYER
		if t.skin == TAKIS_SKIN
			if (tm.player.takistable.accspeed < 60*FU)
				//are we both afterimaging?
				if ((takis.afterimaging) and (tm.player.takistable.afterimaging))
					//heartcard priority
					if takis.heartcards > tm.player.takistable.heartcards
						if CanPlayerHurtPlayer(p,tm.player)
							local ang = R_PointToAngle2(t.x,t.y, tm.x,tm.y)
							stopmom(takis,me,ang)
							
							TakisAddHurtMsg(tm.player,HURTMSG_CLUTCH)
							P_DamageMobj(tm,t,t,4)
							
							local bam = P_SpawnMobjFromMobj(tm,0,0,0,MT_TNTDUST)
							bam.state = mobjinfo[MT_MINECART].deathstate  

							S_StartSound(tm,sfx_smack)
							
							ang = R_PointToAngle2(tm.x,tm.y, t.x,t.y)
							if tm.health
								P_Thrust(tm,ang,-6*me.scale)
								P_MovePlayer(tm.player)
							end
						else
							dodisciplinaryaction(t,tm)
						end
					//port priority
					//melee reference !!
					elseif #p < #tm.player
						if CanPlayerHurtPlayer(p,tm.player)
							local ang = R_PointToAngle2(t.x,t.y, tm.x,tm.y)
							stopmom(takis,me,ang)
							
							TakisAddHurtMsg(tm.player,HURTMSG_CLUTCH)
							P_DamageMobj(tm,t,t,4)
							
							local bam = P_SpawnMobjFromMobj(tm,0,0,0,MT_TNTDUST)
							bam.state = mobjinfo[MT_MINECART].deathstate  

							S_StartSound(tm,sfx_smack)
							
							ang = R_PointToAngle2(tm.x,tm.y, t.x,t.y)	
							if tm.health
								P_Thrust(tm,ang,-6*me.scale)
								P_MovePlayer(tm.player)
							end
						else
							dodisciplinaryaction(t,tm)
						end
					end
				elseif (takis.afterimaging)
				
					if CanPlayerHurtPlayer(p,tm.player)
						local ang = R_PointToAngle2(t.x,t.y, tm.x,tm.y)
						stopmom(takis,me,ang)
						
						TakisAddHurtMsg(tm.player,HURTMSG_CLUTCH)
						P_DamageMobj(tm,t,t,4)
						
						local bam = P_SpawnMobjFromMobj(tm,0,0,0,MT_TNTDUST)
						bam.state = mobjinfo[MT_MINECART].deathstate  

						S_StartSound(tm,sfx_smack)
						
						ang = R_PointToAngle2(tm.x,tm.y, t.x,t.y)		
						if tm.health
							P_Thrust(tm,ang,-6*me.scale)
							P_MovePlayer(tm.player)
						end
					else
						dodisciplinaryaction(t,tm)
					end
					
				end
			//going fast turns the other person into mush
			else
				
				//are we both afterimaging?
				if ((takis.afterimaging) and (t.player.takistable.afterimaging))
					
					//we have to be going faster than the other guy
					if takis.accspeed > tm.player.takistable.accspeed
					and CanPlayerHurtPlayer(p,tm.player)
						local bam = P_SpawnMobjFromMobj(tm,0,0,0,MT_TNTDUST)
						bam.state = mobjinfo[MT_MINECART].deathstate  

						S_StartSound(t,sfx_bsnipe)
						
						TakisAddHurtMsg(tm.player,HURTMSG_CLUTCH)
						P_KillMobj(tm,t,t,4)
						
						LaunchTargetFromInflictor(1,t,tm,63*t.scale,takis.accspeed/5)
						P_MovePlayer(tm.player)
						
					else
						dodisciplinaryaction(t,tm,true)
					end
				
				elseif (takis.afterimaging)
					if CanPlayerHurtPlayer(p,tm.player)
					
						local bam = P_SpawnMobjFromMobj(tm,0,0,0,MT_TNTDUST)
						bam.state = mobjinfo[MT_MINECART].deathstate  

						S_StartSound(t,sfx_bsnipe)
						
						TakisAddHurtMsg(tm.player,HURTMSG_CLUTCH)
						P_KillMobj(tm,t,t,4)
						
						LaunchTargetFromInflictor(1,t,tm,63*t.scale,takis.accspeed/5)
						P_MovePlayer(tm.player)
					
					else
						dodisciplinaryaction(t,tm,true)
					end
				end
				
			end
		end
		return
	end
	
	if tm.flags & (MF_ENEMY|MF_BOSS|MF_SHOOTABLE)
		if takis.afterimaging
		or p.pflags & PF_SPINNING
			local ang = R_PointToAngle2(t.x,t.y, tm.x,tm.y)
			stopmom(takis,me,ang)
			
			if not (p.pflags & PF_SPINNING)
				S_StartSound(tm,sfx_smack)
				local bam = P_SpawnMobjFromMobj(tm,0,0,0,MT_TNTDUST)
				bam.state = mobjinfo[MT_MINECART].deathstate 
				
				
				spawnragthing(tm,t)
			end
			
		end
		
	end
	
end

addHook("ShouldDamage", function(mo,inf,sor,dmg,dmgt)
	if not mo
	or not mo.valid
		return
	end
	
	if mo.skin ~= TAKIS_SKIN
		return
	end
	
	if mo.player.deadtimer > 10
		return
	end
	
	if mo.player.powers[pw_carry] == CR_NIGHTSMODE
		return
	end
	
	//quit camping, crawla!
	if mo.player.takistable.inFakePain
		return false
	end
	
	if dmgt == DMG_DEATHPIT
		if mo.player.exiting then return end
		if TAKIS_NET.inspecialstage then return end
		if mo.player.takistable.timesdeathpitted > 5
			mo.player.takistable.saveddmgt = DMG_DEATHPIT
			return true
		end
		if mo.player.takistable.heartcards ~= 0
			if mo.player.powers[pw_flashing] == 0
				TakisHealPlayer(mo.player,mo,mo.player.takistable,3)
				DoQuake(mo.player,30*FU*(max(1,mo.player.timeshit*2/3)),15)
				mo.player.timeshit  = $+1
				S_StartSound(me,sfx_smack)
				S_StartAntonOw(mo)
			end
			if (mo.player.timeshit == 1)
			and mo.player.ptje_rank
				mo.player.takistable.HUD.rank.grow = FRACUNIT/3
				S_StartSound(nil,sfx_didbad,mo.player)
			end
			
			mo.player.takistable.timesdeathpitted = $+1
			mo.player.takistable.hammerblastdown = 0
			if ((mo.player.takistable.hammerblasthitbox) and (mo.player.takistable.hammerblasthitbox.valid))
				P_RemoveMobj(mo.player.takistable.hammerblasthitbox)
				mo.player.takistable.hammerblasthitbox = nil
			end
			
			P_SetObjectMomZ(mo,(-mo.player.takistable.prevmomz)*mo.player.takistable.timesdeathpitted)
			mo.state = S_PLAY_ROLL
			mo.player.pflags = $|PF_JUMPED &~(PF_THOKKED|PF_SPINNING)
			mo.player.takistable.thokked = false
			mo.player.takistable.dived = false
			mo.player.takistable.fakeflashing = flashingtics
			mo.player.takistable.HUD.statusface.painfacetic = 3*TR
			
			return false
		end
		
	elseif dmgt == DMG_CRUSHED
		if mo.player.takistable.timescrushed < TR
			mo.player.takistable.beingcrushed = true
			return false
		end
	end
	
end,MT_PLAYER)

/*
local function KillSpike(spike, plmo)
    if not (plmo and plmo.valid and plmo.skin == TAKIS_SKIN) then return end
    if plmo.type ~= MT_PLAYER then return end
    if plmo.z + plmo.height < spike.z or (spike.z + (spike.height+(spike.height/2))) < plmo.z then return end

    local player = plmo.player
	
    if player.takistable.afterimaging
	or player.powers[pw_invulnerability]
	and L_ZCollide(spike,plmo)
		P_KillMobj(spike, plmo, plmo)
    end
end

addHook("MobjCollide", KillSpike, MT_SPIKE)
addHook("MobjCollide", KillSpike, MT_WALLSPIKE)
addHook("MobjCollide", KillSpike, MT_SPIKEBALL)
addHook("MobjCollide", KillSpike, MT_BOMBSPHERE)
*/

local function hammerhitbox(t,tm)
	if not t
	or not t.valid
		return
	end
	
	if not tm
	or not tm.valid
		return
	end
	
	if tm == t.parent
		return
	end
	
	if not collide2(t,tm)
		return
	end
	
	if tm.type == MT_PLAYER
		
		if CanPlayerHurtPlayer(t.parent.player,tm.player)
			TakisAddHurtMsg(tm.player,HURTMSG_HAMMERBOX)
			P_DamageMobj(tm,t,t.parent,5)
		end
	else
		
		if SPIKE_LIST[tm.type]
			P_KillMobj(tm,t,t.parent)
			return
		end
		
		if tm.flags & (MF_ENEMY|MF_BOSS|MF_MONITOR)
			P_DamageMobj(tm,t,t.parent)
		//	P_SetObjectMomZ(t.parent,14*t.parent.scale)
		end
		
		if tm.flags & MF_SPRING
			P_DoSpring(tm,t.parent)
			t.parent.player.takistable.hammerblastdown = 0
			if ((mobjinfo[tm.type].mass == 0) and (mobjinfo[tm.type].damage > 0))
				t.parent.momz = 0
			end
			P_RemoveMobj(t)
			return
		end
		
	end
end

local function hammerhitbox2(tm,t)
	hammerhitbox(tm,t)
end

addHook("MobjCollide",hammerhitbox,MT_TAKIS_HAMMERHITBOX)
addHook("MobjMoveCollide",hammerhitbox2,MT_TAKIS_HAMMERHITBOX)

local function tauntbox(t,tm)
	if not t
	or not t.valid
		return
	end
	
	if not tm
	or not tm.valid
		return
	end
	
	if tm == t.tracer
		return
	end
	
	if not L_ZCollide(t,tm)
		return
	end
	
	if (t.boxtype == "bat")
		if tm.type == MT_PLAYER
			
			TakisResetTauntStuff(tm.player.takistable)
			TakisAwardAchievement(t.tracer.player,ACHIEVEMENT_HOMERUN)
			
			//this wont kill without ff in coop, but its funnier that way
			P_DamageMobj(tm,t,t.tracer,1,DMG_INSTAKILL)
			
			local ang = t.tracer.player.drawangle
			
			P_InstaThrust(tm,ang, 175*FU)
			P_SetObjectMomZ(tm,60*FU)
			
			S_StartSound(nil,sfx_homrun,tm.player)
			
			local ghs = P_SpawnGhostMobj(t)
			ghs.fuse = 10*TR
			ghs.flags2 = $|MF2_DONTDRAW
			S_StartSound(ghs,sfx_homrun)
			
			if tm.health
				tm.state = S_PLAY_PAIN
			end
		else
			
			if tm.flags & (MF_ENEMY|MF_BOSS)
			or (tm.flags & MF_MONITOR)
				spawnragthing(tm,t.tracer)
				local ghs = P_SpawnGhostMobj(t)
				ghs.fuse = 10*TR
				ghs.flags2 = $|MF2_DONTDRAW
				S_StartSound(ghs,sfx_homrun)
			end
		end
	end
end

addHook("MobjCollide",tauntbox,MT_TAKIS_TAUNT_HITBOX)

local function givecardpieces(mo, _, source)

	if not source
	or not source.valid
		return
	end
	
	
	if source
	and source.skin == TAKIS_SKIN
	and source.player
	and source.player.valid
		if source.player.takistable.heartcards ~= TAKIS_MAX_HEARTCARDS
		and mo.takis_givecardpieces
			
			source.player.takistable.heartcardpieces = $+1
		
		end
		
		if source.player.takistable.combo.time
		and mo.takis_givecombotime
			TakisGiveCombo(source.player,source.player.takistable,false)
		end
		
		if mo.takis_givecombotime
		or mo.takis_givecardpieces
			P_AddPlayerScore(source.player,10)
		end
		
	end
	
end

addHook("MobjDeath", givecardpieces)
//thing died by takis
local function hurtbytakis(mo,inf,sor)
	
	if not sor
	or not sor.valid
		return
	end
	
	if sor.skin ~= TAKIS_SKIN
		return
	end
	
	if mo.ragdoll
		return
	end
	
	if mo.flags & MF_MONITOR
		if mo.type ~= MT_EGGMAN_BOX
			if mo.type == MT_1UP_BOX
			or mo.type == MT_SCORE10K_BOX
				TakisHealPlayer(sor.player,sor,sor.player.takistable,2)
			end
			if mo.type == MT_RING_BOX
				TakisHealPlayer(sor.player,sor,sor.player.takistable,1)
			end
			TakisGiveCombo(sor.player,sor.player.takistable,true)
			sor.player.takistable.HUD.statusface.happyfacetic = 3*TR/2
			if mo.partofdestoys
			and (sor.player.powers[pw_carry] ~= CR_NIGHTSMODE)
				sor.player.takistable.thingsdestroyed = $+1
			end
		end
	end
	
	if sor.player
	and sor.player.takistable
		if ((mo.flags & MF_ENEMY) or (mo.flags & MF_BOSS))
		or ( mo.flags & MF_MONITOR)
			if sor.player.takistable.dived
			or sor.player.takistable.thokked
				sor.player.takistable.dived = false
				sor.player.takistable.thokked = false
				sor.player.pflags = $ &~PF_THOKKED
			end
			if inf.type == MT_THROWNSCATTER
			and inf.shotbytakis
				if (mo.flags & MF_ENEMY)
					//stupid
					//spawn ragdoll thing here
					local tm = mo
					local t = sor
					local ragdoll = P_SpawnMobjFromMobj(tm,0,0,0,MT_TAKIS_BADNIK_RAGDOLL)
					tm.tics = -1
					ragdoll.sprite = tm.sprite
					ragdoll.color = tm.color
					ragdoll.angle = R_PointToAngle2(tm.x,tm.y, t.x,t.y)
					ragdoll.frame = tm.frame
					ragdoll.height = tm.height*2
					ragdoll.radius = tm.radius*2
					ragdoll.scale = tm.scale
					ragdoll.timealive = 1
					ragdoll.angle = tm.angle+t.player.takistable.accspeed
					ragdoll.parent2 = t
					ragdoll.flags = 0
					ragdoll.ragdoll = true
					
					P_SetObjectMomZ(ragdoll,7*t.scale)
					
					P_Thrust(ragdoll,ragdoll.angle,
						-63*t.scale-FixedMul(t.player.takistable.accspeed,t.scale)
					)
					
					if P_RandomChance(FRACUNIT/13)
						S_StartSound(ragdoll,sfx_takoww)
					end
				elseif ( mo.flags & MF_MONITOR)
					local tm = mo
					local t = sor
					
					//but are we allowed to break it?
					if ((tm.type == MT_RING_REDBOX) or
					(tm.type == MT_RING_BLUEBOX))
						if monitorctfteam[tm.type] ~= t.player.ctfteam
							return
						end
					end
					
					//spawn ragdoll thing here
					local ragdoll = P_SpawnMobjFromMobj(tm,0,0,0,MT_TAKIS_BADNIK_RAGDOLL)
					tm.tics = -1
					ragdoll.sprite = tm.sprite
					ragdoll.color = tm.color
					ragdoll.angle = R_PointToAngle2(tm.x,tm.y, t.x,t.y)
					ragdoll.frame = tm.frame
					ragdoll.height = tm.height*2
					ragdoll.radius = tm.radius*2
					ragdoll.scale = tm.scale
					ragdoll.timealive = 1
					
					P_SetObjectMomZ(ragdoll,7*t.scale)
					P_Thrust(ragdoll,ragdoll.angle,-63*t.scale-FixedMul(t.player.takistable.accspeed,t.scale))
					for i = 0, 34
						A_BossScream(ragdoll,1,MT_SONIC3KBOSSEXPLODE)
					end
					local f = P_SpawnGhostMobj(ragdoll)
					f.flags2 = $|MF2_DONTDRAW
					f.fuse = 2*TR
					S_StartSound(f,sfx_tkapow)
					P_RemoveMobj(ragdoll)
						
				end
				
			end
		end
		
		if ((mo.flags & MF_ENEMY) or (mo.flags & MF_BOSS))
		or (SPIKE_LIST[mo.type] == true)
		or (mo.type == MT_PLAYER)
		and (not mo.ragdoll)
			if not mo.health
			and not mo.ragdoll
			and not (mo.flags & MF_BOSS)
				TakisGiveCombo(sor.player,sor.player.takistable,true)
				if mo.partofdestoys
					sor.player.takistable.thingsdestroyed = $+1
				end
			else
				for i = 1,3
					TakisGiveCombo(sor.player,sor.player.takistable,false)			
				end
			end
			
			if mo.type == MT_PLAYER
				if (not mo.health)
					sor.player.takistable.HUD.statusface.evilgrintic = 2*TR
				end
				if mo.player.takistable.tauntjoinable
				or mo.player.takistable.tauntacceptspartners
					TakisAwardAchievement(sor.player,ACHIEVEMENT_PARTYPOOPER)
				end
			end
		
		end
		
	end

end
local function diedbytakis(mo,inf,sor)
	hurtbytakis(mo,inf,sor)
end

addHook("MobjDeath", hurtbytakis)
addHook("MobjDamage", diedbytakis)

//takis died by thing
addHook("MobjDeath", function(mo,_,_,dmgt)
	if mo.skin ~= TAKIS_SKIN
		return
	end
	
	if (mo.player.takistable.heartcards > 0)
		mo.player.takistable.HUD.heartcards.shake = $+TAKIS_HEARTCARDS_SHAKETIME
	end
	
	mo.player.takistable.combo.time = 0
	mo.player.takistable.saveddmgt = dmgt
	if mo.player.takistable.saveddmgt == DMG_DROWNED
		if (not mo.player.takistable.inWater) and mo.player.powers[pw_spacetime]
			//we need to set this because srb2 is silly
			mo.player.takistable.saveddmgt = DMG_SPACEDROWN
		else
			mo.player.takistable.saveddmgt = DMG_DROWNED
		end
	elseif mo.player.takistable.saveddmgt == DMG_SPACEDROWN
		mo.player.takistable.saveddmgt = DMG_SPACEDROWN
	end
	
	S_StopSoundByID(mo,sfx_antow1)
	S_StopSoundByID(mo,sfx_antow2)
	S_StopSoundByID(mo,sfx_antow3)
	S_StopSoundByID(mo,sfx_antow4)
	S_StopSoundByID(mo,sfx_antow5)
	
end,MT_PLAYER)
addHook("AbilitySpecial", function(p)
	if p.takistable.thokked
		return true
	end
	if ((p.takistable.inPain) or (p.takistable.inFakePain))
		return true
	end
	
	if p.mo.skin ~= TAKIS_SKIN then return end
	
	local me = p.mo
	local takis = p.takistable
	
	S_StopSoundByID(me,skins[TAKIS_SKIN].soundsid[SKSJUMP])
//	P_DoJump(p,true)
	takis.thokked = true
	takis.hammerblastjumped = 0
	
	S_StartSoundAtVolume(me,sfx_takdjm,4*255/5)

	for i = 0, 7
		local mt = MT_SPINDUST
		if me.eflags & MFE_UNDERWATER
			mt = MT_MEDIUMBUBBLE
		end

		local radius = me.scale*16
		local fa = (i*ANGLE_45)
		local dust = P_SpawnMobjFromMobj(me,0,0,0,mt)
		dust.momx = FixedMul(sin(fa),radius)
		dust.momy = FixedMul(cos(fa),radius)
		dust.momz = -(abs(me.momz)*takis.gravflip)/2
		dust.scale = FixedDiv(me.scale,3*FRACUNIT/4)
		dust.destscale = dust.scale/3
	end
	
	P_SetObjectMomZ(p.mo,15*FU,true)
	p.mo.state = S_PLAY_ROLL
	p.pflags = $|PF_JUMPED & ~PF_SPINNING & ~PF_JUMPDOWN & ~PF_THOKKED & ~PF_STARTDASH
end)
//takis moved into a thing

//this should be used as the main movecollide hook from now on
addHook("MobjMoveCollide",function(tm,t)
	if not (tm.player or ((t) and (t.valid)))
		return
	end
	
	if (tm.skin ~= TAKIS_SKIN)
		return
	end
	
	if not (L_ZCollide(tm,t))
		return
	end
	
	local p = tm.player
	local takis = p.takistable
	
	if takis
		
		knockbacklolll(tm,t)
		
		//destroy these stupid doors
		if ((t.type == MT_SALOONDOOR) or (t.type == MT_SALOONDOORCENTER))
			if ((t.valid) and (t.health) and not (t.flags & MF_NOCLIP))
			and (takis.afterimaging)
				S_StartSound(t,sfx_wbreak)
				S_StartSound(t,sfx_s3k59)

				local bam = P_SpawnMobjFromMobj(t,0,0,0,MT_TNTDUST)
				bam.state = mobjinfo[MT_MINECART].deathstate 
				
				if (t.type == MT_SALOONDOOR)
					t.flags = $|MF_NOCLIP
					TakisGiveCombo(p,takis,true)
					P_KillMobj(t, tm, tm)
				//waht !??
				elseif (t.type == MT_SALOONDOORCENTER)
					t.flags = $|MF_NOCLIP
				end
				
				return false
			end
		//springs keep our momentum!
		//only horizontal springs
		elseif (t.flags & MF_SPRING)
		and L_ZCollide(t,tm)
			if ((mobjinfo[t.type].mass == 0) and (mobjinfo[t.type].damage > 0))
				P_InstaThrust(tm,t.angle,takis.prevspeed+mobjinfo[t.type].damage)
				tm.angle,p.drawangle = t.angle,t.angle
				tm.eflags = $|MFE_SPRUNG
				takis.fakesprung = true
				p.homing = 0
				
				S_StartSound(t,mobjinfo[t.type].painsound)
				t.state = mobjinfo[t.type].raisestate
				return false
			end
		//people bowling
		elseif (t.type == MT_PLAYER)
		and ((t.player) and (t.player.valid))
		and (p.pflags & PF_SPINNING)
		and L_ZCollide(t,tm)
			if CanPlayerHurtPlayer(p,t.player)
				TakisAddHurtMsg(t.player,HURTMSG_SLIDE)
				P_DamageMobj(t,tm,tm,10)
				LaunchTargetFromInflictor(1,t,tm,63*tm.scale,takis.accspeed/5)
				P_Thrust(tm,p.drawangle,5*tm.scale)
				P_SetObjectMomZ(t,P_RandomRange(5,15)*tm.scale,true)
				
				local bam = P_SpawnMobjFromMobj(tm,0,0,0,MT_TNTDUST)
				bam.state = mobjinfo[MT_MINECART].deathstate 
				
				S_StartSound(t,sfx_bowl)
				S_StartSound(tm,sfx_smack)
			end
		//spike stuff
		elseif (SPIKE_LIST[t.type] == true)
			//we mightve ran into a spike thing
			if t.health
			and (p.powers[pw_strong] & STR_SPIKE)
				P_KillMobj(t,tm,tm)
				return false
			end
		end
	end
end,MT_PLAYER)

filesdone = $+1
